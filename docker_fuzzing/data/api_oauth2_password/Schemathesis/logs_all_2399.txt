======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 207887914550422806023932370716804448896
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: 5pZUum

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?filter=%1F%3B%F1%80%BA%B4'

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: BibwdJ

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '{"<\u0007\u00c5\u00a5\u00cc\u00f1\ud9a9\udf52\t\u00e8": "\u0013\u00ec\ud929\uded4\u00f9\u00ce\u009b\u0000\u00e2\u00a5\u00b0\ud9d1\ude0b", "username": "\u0011", "\udbbf\udd79\u009dw\r\u0080\u00cb\u00c9\u00e6\uda4a\udf4d\u00b8[\u00c9\u00c5\u0013\u00d0d[MK;\u00fb": {}, "lastName": "", "": {"": false, "\ud85e\ude2e\uda31\udde2\u00ca\ud9d6\udff3\u00cf\udbb8\udc68\u00fc": null, "\u00c9": 7.29385307898659e+54}, "email": "\u00c1", "\u00d4\u00d1\u0081": {"\u00de.\u008a\u0004\u001e\u008f\u00c2\ud8b8\udf6b": -24559}, "\u0090P\u009fb\u00fb\ud921\udf49+IG.\u00ed\u00f5\n": [[], {}, {"\u00d5e\u0004\ud838\udd72\\\ud88d\uddad": "\u00f1\t\udb92\ude04\u00a6\udb13\udc29\u00a1\u00f8"}], "\u47afI\udad5\ude67": {"G\u00f0?": {"\u00fe\u00c7": {}}}, "8'"'"'cW": {"\uda22\uddba": true, "u\u00b5\udb81\udc3d\u00a7\u0098": {}, "\u0016t\u00f1\udb79\uddd7": -15147}, "-1\u00db\ud85c\udc88\u00e9\u001c\u00c0i": [{"": -127, "\uda58\udef0\uda4f\udcdb\u00cb\u00eeT\udadf\udf19\ud801\udde6]\ud860\uddb9F\u0098u\t\u0011\te\u00dd\ud910\udf12\u00e26\u00f2\u00f3\u0015*\u00dc": -9304}]}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: shKRng

- Response violates schema

    [{'id': 'string', 'username': 'string', 'email': 'string', 'firstName': 'string', 'lastName': 'string'}] is not of type 'object'

    Schema:

        {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the user"
                },
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name"
                },
            // Output truncated...
        }

    Value:

        [
            {
                "id": "string",
                "username": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string"
            }
        ]

[200] OK:

    `[ {
      "id" : "string",
      "username" : "string",
      "email" : "string",
      "firstName" : "string",
      "lastName" : "string"
    } ]`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/.

2. Test Case ID: kpSljz

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/1

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: 0934E7

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: weIaYo

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: d6vI4W

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              81 / 81 passed          PASSED 
    status_code_conformance                         25 / 81 passed          FAILED 
    content_type_conformance                        81 / 81 passed          PASSED 
    response_headers_conformance                    81 / 81 passed          PASSED 
    response_schema_conformance                     77 / 81 passed          FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=207887914550422806023932370716804448896`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 11.20s ==============================
