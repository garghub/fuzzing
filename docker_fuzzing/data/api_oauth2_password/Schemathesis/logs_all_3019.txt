======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 268014054305653055962383908458655889132
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: nCH1t9

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?x=%C2%AC&%C3%97%C3%B5%C3%A3%F0%AF%9D%BB7%C2%80%F1%A6%8D%AA=%F3%82%8E%B4%C2%93%F2%9A%A7%89&%C3%97%C3%B5%C3%A3%F0%AF%9D%BB7%C2%80%F1%A6%8D%AA=J%C2%A6D%C2%9C&%C3%97%C3%B5%C3%A3%F0%AF%9D%BB7%C2%80%F1%A6%8D%AA=%C3%98%0F%C3%B7&%F0%A0%B5%90%C2%88Ss%29%16%F0%BD%86%A2=%5BNone%5D&%F0%A0%B5%90%C2%88Ss%29%16%F0%BD%86%A2=%7B%27%C3%A2%C2%B1%2C%5Cx9a%C3%B5%27%3A+%5B97796581618351535842856238706161586102%5D%2C+%27%C3%A4%2C%5Cx9c%27%3A+True%2C+%27%5CU000fde28%C3%85%C2%B3%5CU0006d269%5Cx00%C3%8D%5Cx91%C3%BE%C3%A5%C3%BC%27%3A+%7B%27%5CU000336df5%27%3A+%27%5Cx01%C2%ACz%5Cx1a%5Cx87%C3%8D%5CU0003e293%5CU0001ae26j%5CU00045b3b%E6%80%8F%28%C3%B9V%5E%C3%AE%5Cx95%27%2C+%27%C2%BF%C3%83%27%3A+%27%C2%B2%27%7D%7D&%F0%A0%B5%90%C2%88Ss%29%16%F0%BD%86%A2=%5B%5D&g=%C2%B0r&g=%C2%9FH%25%C3%9Ae%12%C2%BE&g=%C3%9E&%C2%A6G%C2%9E='

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
1. Test Case ID: MvQFO7

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: uDFpWi

- Response violates schema

    [{'id': 'string', 'username': 'string', 'email': 'string', 'firstName': 'string', 'lastName': 'string'}] is not of type 'object'

    Schema:

        {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the user"
                },
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name"
                },
            // Output truncated...
        }

    Value:

        [
            {
                "id": "string",
                "username": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string"
            }
        ]

[200] OK:

    `[ {
      "id" : "string",
      "username" : "string",
      "email" : "string",
      "firstName" : "string",
      "lastName" : "string"
    } ]`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/.

2. Test Case ID: NeWkU6

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/2

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: fy7yIU

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: nJeSWV

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: o5HwDr

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              78 / 78 passed          PASSED 
    status_code_conformance                         28 / 78 passed          FAILED 
    content_type_conformance                        78 / 78 passed          PASSED 
    response_headers_conformance                    78 / 78 passed          PASSED 
    response_schema_conformance                     74 / 78 passed          FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=268014054305653055962383908458655889132`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 10.49s ==============================
