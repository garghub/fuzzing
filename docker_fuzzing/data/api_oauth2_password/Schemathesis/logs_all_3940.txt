======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 52012465877327812166474927734404267581
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: iClHuF

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?%C3%96%F3%A6%8E%82%25w=%C3%B2Wg%27%0A%F0%95%AB%94%C2%B2d%C2%92%F2%90%BB%86&%C3%96%F3%A6%8E%82%25w=%F1%9D%8B%A7%C3%84%C3%9Ck%F0%97%8B%9E%C3%B8%C2%97%C3%82%06&%C3%96%F3%A6%8E%82%25w=%C2%9C%C2%8Fp%C3%A9%1DA%C3%BAkvj%C3%84%0F%2C&%C3%96%F3%A6%8E%82%25w=False&%C3%96%F3%A6%8E%82%25w=4.99569449718456e%2B16&%C3%96%F3%A6%8E%82%25w=%1E%E9%81%8E%00%C3%91%C2%91%40&%C3%96%F3%A6%8E%82%25w=O&Y=%7B%27%27%3A+True%2C+%22%27%C3%8F%C3%97%C2%BD%5CU000499aa%5Cx08P%5Ct%22%3A+None%2C+%27%C3%9F%C3%9D%C3%81%F0%96%BD%BF%5CU00072502%5Cx99%C3%AB%27%3A+2.2250738585072014e-308%7D&Y=%5B9007199254740992.0%5D&Y=6637&Y=None&Y=3.402823466e%2B38&Y=-19841&%C2%80%C2%99%C3%B0%3E%C3%A8%07%C3%84%11%C3%AC=%17%C3%AB%C3%BA%E1%B7%8D%C2%B68%F0%B5%92%A4%F4%82%BB%82%C3%8F%3B%F2%A3%A3%A1&%C2%80%C2%99%C3%B0%3E%C3%A8%07%C3%84%11%C3%AC=%1B%C2%99&Z=%F0%91%84%8B%21%19'

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
1. Test Case ID: Z6zZ9p

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: lKMh2y

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 404

- Response violates schema

    [{'id': 'string', 'username': 'string', 'email': 'string', 'firstName': 'string', 'lastName': 'string'}] is not of type 'object'

    Schema:

        {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the user"
                },
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name"
                },
            // Output truncated...
        }

    Value:

        [
            {
                "id": "string",
                "username": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string"
            }
        ]

[200] OK:

    `[ {
      "id" : "string",
      "username" : "string",
      "email" : "string",
      "firstName" : "string",
      "lastName" : "string"
    } ]`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/.

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: 6fneCM

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/E

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: T7Q0cJ

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: gD63Ah

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              41 / 41 passed          PASSED 
    status_code_conformance                         16 / 41 passed          FAILED 
    content_type_conformance                        41 / 41 passed          PASSED 
    response_headers_conformance                    41 / 41 passed          PASSED 
    response_schema_conformance                     40 / 41 passed          FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=52012465877327812166474927734404267581`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 6.39s ===============================
