======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 273995165252095337851246708804894142300
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: 6BL6wB

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?filter=null&%C2%AE%F2%B6%87%B2%C2%83t%F3%9D%A0%B6%F3%92%9B%9A%C3%9A%60%17%C2%93%F1%8D%AB%AB%27%F0%B5%91%AF%C2%95=%C2%89&%C2%AE%F2%B6%87%B2%C2%83t%F3%9D%A0%B6%F3%92%9B%9A%C3%9A%60%17%C2%93%F1%8D%AB%AB%27%F0%B5%91%AF%C2%95=6.103515625e-05&%C2%AE%F2%B6%87%B2%C2%83t%F3%9D%A0%B6%F3%92%9B%9A%C3%9A%60%17%C2%93%F1%8D%AB%AB%27%F0%B5%91%AF%C2%95=False&%C2%AE%F2%B6%87%B2%C2%83t%F3%9D%A0%B6%F3%92%9B%9A%C3%9A%60%17%C2%93%F1%8D%AB%AB%27%F0%B5%91%AF%C2%95=%F1%BB%91%9D%21%C3%BA%F2%B0%AB%B9%C2%9B%0D%C3%B1%C3%89m%C2%AA&%C2%AE%F2%B6%87%B2%C2%83t%F3%9D%A0%B6%F3%92%9B%9A%C3%9A%60%17%C2%93%F1%8D%AB%AB%27%F0%B5%91%AF%C2%95=%5E%C3%9B%F2%9A%B2%BC%C2%B6&%C2%AE%F2%B6%87%B2%C2%83t%F3%9D%A0%B6%F3%92%9B%9A%C3%9A%60%17%C2%93%F1%8D%AB%AB%27%F0%B5%91%AF%C2%95=&=%F3%B9%8D%A5f%C2%A9%5E%C3%82&=w%C2%91%F4%8D%A5%9A&=%C3%9B%C2%A5p%C2%B0%C2%9E%C3%8E%F2%A9%A1%B6y%C3%A1%F2%BD%93%95%F2%A5%B3%B9%C3%A7%C2%A9%F1%A8%84%93R%C2%85%C2%A5%C2%92x8%C3%A4%F2%BD%80%AC&9%5C%40%C3%97m%F2%BE%85%B4=%5BNone%5D'

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
1. Test Case ID: ehDaqH

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: iiSFeK

- Undocumented HTTP status code

    Received: 400
    Documented: 200, 404

[400] Bad Request:

    `<html>
    <head><title>400 Bad Request</title></head>
    <body>
    <center><h1>400 Bad Request</h1></center>
    </body>
    </html>`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/%001

2. Test Case ID: qatmAu

- Response violates schema

    [{'id': 'string', 'username': 'string', 'email': 'string', 'firstName': 'string', 'lastName': 'string'}] is not of type 'object'

    Schema:

        {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the user"
                },
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name"
                },
            // Output truncated...
        }

    Value:

        [
            {
                "id": "string",
                "username": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string"
            }
        ]

[200] OK:

    `[ {
      "id" : "string",
      "username" : "string",
      "email" : "string",
      "firstName" : "string",
      "lastName" : "string"
    } ]`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/.

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: SXqDEa

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: YURr15

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: hhsmhA

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              64 / 64 passed          PASSED 
    status_code_conformance                         30 / 64 passed          FAILED 
    content_type_conformance                        64 / 64 passed          PASSED 
    response_headers_conformance                    64 / 64 passed          PASSED 
    response_schema_conformance                     62 / 64 passed          FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=273995165252095337851246708804894142300`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 9.26s ===============================
