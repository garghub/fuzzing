======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 272992457683238121231461207970709294936
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: lWFX0I

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?filter=%1B%F1%82%BF%A0%F2%A4%85%92Qe%F3%BD%8E%8B%C2%89&filter=3%F1%88%B8%844%F1%B0%AC%82%F3%90%B5%A1&filter=%C2%BE%F1%82%AB%A2%C3%B7%02%C2%A5%24t%F0%BA%BF%A1%C2%99L%F0%B1%85%A7%F1%91%8B%95T%C2%BF%2C%F1%A4%A8%90%F3%AE%BF%B0%C2%8DA%F0%94%A5%8B%C3%89%F1%8C%9B%92%F3%B9%9D%81%C3%81&filter=s%C2%A7%C3%B3%C3%BDs%1C%F1%96%80%A2%C3%99%F0%A7%B8%92%C3%B1w%C2%9A%1FA%C3%83%C2%8F%C2%8F%F1%93%AF%BB%C3%8A%F0%B8%B2%8D%C2%B6%C2%AD%F2%A9%B9%95%C2%9F%C2%B52%C3%BBF%F3%A2%BE%9F%23r%16%C2%95%C3%A8%F1%8F%8C%8AXC%C2%96%F3%B4%A7%92z%F1%B9%A5%BF8%C2%AD%19%3A&%01%11%28J%1F%F0%AD%BD%B4=&%1D%F0%B3%BE%B6=7%0E%C2%B2%C3%872d%F3%B5%BF%86&%1F%C2%91X=%7B%27%27%3A+None%2C+%27+%5CU0009308cy%C3%85%5CU000849f7%C3%95%C3%8F%27%3A+None%7D&%1F%C2%91X=None&%1F%C2%91X=-10313&%1F%C2%91X=%F1%97%A6%9CS%C2%A4%C3%89%C3%9E%C3%A8'

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
1. Test Case ID: Y2p9cF

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: dMeK2Z

- Response violates schema

    [{'id': 'string', 'username': 'string', 'email': 'string', 'firstName': 'string', 'lastName': 'string'}] is not of type 'object'

    Schema:

        {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the user"
                },
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name"
                },
            // Output truncated...
        }

    Value:

        [
            {
                "id": "string",
                "username": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string"
            }
        ]

[200] OK:

    `[ {
      "id" : "string",
      "username" : "string",
      "email" : "string",
      "firstName" : "string",
      "lastName" : "string"
    } ]`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/.

2. Test Case ID: i8mGkA

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: OhxR5o

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: wShEOZ

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: temej6

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              76 / 76 passed          PASSED 
    status_code_conformance                         30 / 76 passed          FAILED 
    content_type_conformance                        76 / 76 passed          PASSED 
    response_headers_conformance                    76 / 76 passed          PASSED 
    response_schema_conformance                     72 / 76 passed          FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=272992457683238121231461207970709294936`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 32.95s ==============================
