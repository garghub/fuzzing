======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 281346258247035705296263022068805076961
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: PdWsGe

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

- Response timeout

    The server failed to respond within the specified limit of 10000.00ms

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?O%F2%A0%9E%819%60%C3%AC%F2%95%94%B3%C2%A8s=%C3%85&O%F2%A0%9E%819%60%C3%AC%F2%95%94%B3%C2%A8s=%C3%88MHz%C2%B0Wf%F3%A3%97%8C%C3%86%40%F3%BC%AF%A8%C3%A5w&O%F2%A0%9E%819%60%C3%AC%F2%95%94%B3%C2%A8s=%C3%9D%06%16%1A%C2%9A%F0%BD%BE%BB%C2%BB%C2%9C%12%F0%BA%B4%9D'

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
1. Test Case ID: PjnKnx

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: Gi5bTA

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: C4K5OH

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: oys2RK

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: sa8Ugw

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              139 / 139 passed          PASSED 
    status_code_conformance                         39 / 139 passed           FAILED 
    content_type_conformance                        139 / 139 passed          PASSED 
    response_headers_conformance                    139 / 139 passed          PASSED 
    response_schema_conformance                     139 / 139 passed          PASSED 
    request_timeout                                 0 / 1 passed              FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=281346258247035705296263022068805076961`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 45.10s ==============================
