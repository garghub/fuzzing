======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_oauth2_password/api_oauth2_password.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0
Specification version: Open API 3.0.0
Random seed: 635398882829132017701849411694463818
Workers: 1
Collected API operations: 6
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                       [ 16%]
POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users F                      [ 33%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 50%]
PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F              [ 66%]
DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} F           [ 83%]
GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping F                        [100%]

=================================== FAILURES ===================================
______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: 3aloP5

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET 'https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users?filter=%F2%9B%8C%82K'

______________ POST /AAYUSHGARGBU/api_oauth2_password/1.0.0/users ______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: mEjwXX

- Undocumented HTTP status code

    Received: 429
    Documented: 201, 400

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '[{"\u00e0": [8.899321123391554e-128, null, -36], "": {"\u00eb\u00cc9": 2.5007805874185856e+16, "": "", "\u00b6": 21114}, "\u00d9-\u0010\ud924\udeed\u00cc": {"\udbb3\udc9d\u0013": 10, "\u009e\u008d\t\u00de%\u00cf_+8\udabb\udef7\f\u00c7": null, "\udab0\udf7a\u00e0x\u0004": -1.175494351e-38}}, {"\u0090!T\u001d\u000e\u0007W\u0004K\u0011\u00c8\udbd4\udf11\u001f&\u00b5": 9007199254740992.0, "": true, "\u001e\u0088\u00e7r'"'"'\u0015\u008d\ua00b": "\ud8c1\udec5#\u00ee\u00d4\u00f1\u00ce\b-\u0000\u0098"}, [null, {"?K": [], "\uda8e\udcd8A\ud814\udcf8\u00ef\u001b\u00b7\u00e6bR": [{"\u007f_\u009aM\ud963\udd12\u00e7\u00aa": -1.192092896e-07, "": -1.192092896e-07, "\ud8a8\ude8a\u00ea\u00afU\u00b8": null}, "X:\u00bf\u001ex\u00f3XF\u00a6\u00a4\udb52\udd1f", [23331]], "\u00c7e\u0005Z6\u0016],\ud9c3\ude91\u0092\uda0d\udf71a2H\u00a8\u00a7": ["?", true, 13]}, {"~\u00b8\u00d3\t\u00f7": false, "\u00b7\u00ae\f\u00e55\u00bf\ud87c\udf8c\uda33\udc71\fnD\u0085q\u00f7\u000e\udb5f\udff8\u001bf\u0017\u00dd\udb60\udd41\u00da5\u00c7V\ud892\udfd1[\u00f0\ud897\udcafc\udb89\ude26\u00fc:\udae0\udf5c\ud9ed\udc8d\u0010\u00b5\t|\uda57\uded2\u0088": -8, "H\u00d2\ud823\ude0fB\u00ed{NA": "3\u00bc\u00d0"}]]' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users

__________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: rObbLn

- Response violates schema

    [{'id': 'string', 'username': 'string', 'email': 'string', 'firstName': 'string', 'lastName': 'string'}] is not of type 'object'

    Schema:

        {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the user"
                },
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "firstName": {
                    "type": "string",
                    "description": "User's first name"
                },
            // Output truncated...
        }

    Value:

        [
            {
                "id": "string",
                "username": "string",
                "email": "string",
                "firstName": "string",
                "lastName": "string"
            }
        ]

[200] OK:

    `[ {
      "id" : "string",
      "username" : "string",
      "email" : "string",
      "firstName" : "string",
      "lastName" : "string"
    } ]`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/.

2. Test Case ID: 5XmcG4

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

__________ PUT /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} __________
1. Test Case ID: 2hi6Xr

- Undocumented HTTP status code

    Received: 429
    Documented: 200, 400, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

________ DELETE /AAYUSHGARGBU/api_oauth2_password/1.0.0/users/{userId} _________
1. Test Case ID: Hdd4Sg

- Undocumented HTTP status code

    Received: 429
    Documented: 204, 404

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/users/0

_______________ GET /AAYUSHGARGBU/api_oauth2_password/1.0.0/ping _______________
1. Test Case ID: 3cvF8h

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/api_oauth2_password/1.0.0/ping

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              44 / 44 passed          PASSED 
    status_code_conformance                         11 / 44 passed          FAILED 
    content_type_conformance                        44 / 44 passed          PASSED 
    response_headers_conformance                    44 / 44 passed          PASSED 
    response_schema_conformance                     43 / 44 passed          FAILED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=635398882829132017701849411694463818`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

============================== 6 failed in 17.61s ==============================
