======================= Schemathesis test session starts =======================
Schema location: file:///mnt/d/ag/github/lazarus_target_apis/data/api_simple_items/api_simple_items.json
Base URL: https://virtserver.swaggerhub.com/AAYUSHGARGBU/Simple_API/1.0.0
Specification version: Open API 3.0.0
Random seed: 28773212563725381724781550215333761675
Workers: 1
Collected API operations: 5
Collected API links: 0
API probing: ...API probing: SUCCESS
Schema analysis: ...Schema analysis: SKIP

GET /AAYUSHGARGBU/Simple_API/1.0.0/items .                                [ 20%]
POST /AAYUSHGARGBU/Simple_API/1.0.0/items F                               [ 40%]
GET /AAYUSHGARGBU/Simple_API/1.0.0/items/{itemId} F                       [ 60%]
PUT /AAYUSHGARGBU/Simple_API/1.0.0/items/{itemId} F                       [ 80%]
DELETE /AAYUSHGARGBU/Simple_API/1.0.0/items/{itemId} F                    [100%]

=================================== FAILURES ===================================
__________________ POST /AAYUSHGARGBU/Simple_API/1.0.0/items ___________________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: c1wc1k

- Undocumented HTTP status code

    Received: 429
    Documented: 201

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X POST -H 'Content-Type: application/json' -d '[[true, 6780, 14947], {"\u0090": {"\u00d6%#\u00dd": "\u00efO<\u00e9\u00b6\f\"\u00ca\u00e95|\ud885\udffd\u000b", "\u00f7\ud8c8\udcee\u00e3D\u00df\uda8f\udf58\u0011\u00c2\udb8f\ude02?\u00c7": "\u00a5^\u008b", "~\ud986\ude32": true}, "\udaa0\udf9f\u00b2\u00a1j\ny\u00c0\u00af\u00eb\u0086\u009a\u00bd4i": {"K\u00ac\ud8ef\ude74\ud815\uddb44\udb22\ude87\u00cc{\u009c": false, "\u00d3\udacb\ude32\u0007\u00bc\ud9ac\udfdb\udacc\uded6M": "\u00d0\u00e4\u00fb", "i": null}, ",\u009e0%\ud812\udfdb\u00ca?:A": []}, [[null], {"\u00ae\uda1b\udf73": null, "\u00b1\u00a6\ud9ff\udf40^": true}], {"R\udb69\udd84y": []}, {}]' https://virtserver.swaggerhub.com/AAYUSHGARGBU/Simple_API/1.0.0/items

______________ GET /AAYUSHGARGBU/Simple_API/1.0.0/items/{itemId} _______________
[FLAKY] Schemathesis was not able to reliably reproduce this failure

1. Test Case ID: s6xsRN

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X GET https://virtserver.swaggerhub.com/AAYUSHGARGBU/Simple_API/1.0.0/items/0

______________ PUT /AAYUSHGARGBU/Simple_API/1.0.0/items/{itemId} _______________
1. Test Case ID: WgL3vS

- Undocumented HTTP status code

    Received: 429
    Documented: 200

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X PUT -H 'Content-Type: application/json' -d '{"id": 0, "name": ""}' https://virtserver.swaggerhub.com/AAYUSHGARGBU/Simple_API/1.0.0/items/0

_____________ DELETE /AAYUSHGARGBU/Simple_API/1.0.0/items/{itemId} _____________
1. Test Case ID: w1Cy0R

- Undocumented HTTP status code

    Received: 429
    Documented: 204

[429] Too Many Requests:

    `{"error":"Exceeded rate limit"}`

Reproduce with: 

    curl -X DELETE https://virtserver.swaggerhub.com/AAYUSHGARGBU/Simple_API/1.0.0/items/0

=================================== SUMMARY ====================================

Performed checks:
    not_a_server_error                              59 / 59 passed          PASSED 
    status_code_conformance                         27 / 59 passed          FAILED 
    content_type_conformance                        59 / 59 passed          PASSED 
    response_headers_conformance                    59 / 59 passed          PASSED 
    response_schema_conformance                     59 / 59 passed          PASSED 

Note: Use the 'X-Schemathesis-TestCaseId' header to correlate test case ids from failure messages with server logs for debugging.

Note: To replicate these test failures, rerun with `--hypothesis-seed=28773212563725381724781550215333761675`

Tip: Use the `--report` CLI option to visualize test results via Schemathesis.io.
We run additional conformance checks on reports from public repos.

========================= 1 passed, 4 failed in 10.31s =========================
